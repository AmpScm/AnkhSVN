<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Images.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="Images.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADK
        EgAAAk1TRnQBSQFMAgEBBgEAAQkBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGNsAAe0B6AHkAWMBSQE1AdgB0gHNAWMBSQE1AdgB0gHNAWMBSQE1AdgB0gHN
        AWMBSQE1AdgB0gHNAWMBSQE1AdgB0gHNEgABzwHYAfIBWgFyAbkBIwE9AZMBGwEwAXcBFAEqAW4BEwEu
        AX8BSQFfAaQBzwHYAfJ1AAG3AaIBkxv/AWMBSQE1DAAB5gHqAfgBfwGUAdQBLgFNAasBHAFBAbgBDAE8
        AdABAwE5AeEBAgE2AdsBBgEzAbwBCAEqAZYBCwElAXwBZgF5AbIB5gHqAfhvAAHtAegB5Bv/AdgB0gHN
        DAABiAGcAdsBOwFaAboBHAFMAd0BCQFDAfoBBgFBAfkBRwFzAfoBRgFxAfYBAAE4AewBAAE2AeMBBQEv
        AbUBCAEkAX0BZwF5AbJvAAG3AaIBkxv/AWMBSQE1CQABzwHYAfIBUAFrAcYBLgFaAeMBHQFSAf0BGgFQ
        Af0BVgF/AfwG/gFZAYAB+gEAATsB7wEAATcB5AEFAS8BtgELASUBewHPAdgB8mwAAe0B6AHkG/8B2AHS
        Ac0JAAGnAbYB5QFNAXAB2QEsAV8B/wEtAWEB/wEtAV8B/wFjAYkH/gFQAXkB+wEDAT8B+QEAAToB7gEA
        ATYB5AEJASoBlgFJAV8BpGwAAboBpQGWG/8BYwFJATUJAAFwAYgB1QFLAXIB7gE/AW0B/wFBAW8B/wE+
        AW0B/wE5AWoB/wFqAY4B/wFiAYcB/gEbAVIB/AENAUgB+wEAAT0B+AEAATkB6gEGATMBvQEUAS4Bf2wA
        Ae8B6gHmG/8B2AHSAc0JAAGBAZQB0QFRAXgB+wFSAXwB/wFVAX8B/wFSAXwB/wFeAYUB/wb+AT0BbQH9
        ARgBUAH7AQoBRQH5AQABOwHzAQIBNgHdARQBKgFubAABwwGuAZ4b/wFjAUkBNQkAAYoBmwHUAWABhgH7
        AWUBigH/AWgBjgH/AWYBjAH/AZUBrwH/Bv4BeQGaAf8BIQFXAf0BEQFJAfsBAgE+AfgBAwE5AeIBGwEx
        AXZsAAHyAewB6Bv/AdgB0gHNCQABigGeAdwBeQGWAfIBeAGaAf8BfAGcAf8BeQGZAf8BsQHEAf8G/gGi
        AbgB/gEoAVwB/gEXAU8B+wEHAUEB+AEMATsB0AEjAT4Bk2wAAcwBtgGnG/8BZAFKATYJAAGnAbYB5QGN
        AaIB5QGHAaUB/wGNAagB/wGIAaMB/wHFAdMH/gG1AccB/gEsAV8B/wEbAVIB/AEJAUMB+gEcAUEBuAFk
        AXoBumwAAfQB7gHqEv8BtwGiAZMB2QHSAc0BZAFKATYB2QHSAc0JAAHPAdgB8gGXAacB3QGUAaoB8QGZ
        AbIB/wGNAagB/wGpAb4B/wb+AYMBoQH/AS4BYgH/ARwBUwH9ARwBTAHcAS4BTAGsAc8B2AHybAAB1QG/
        Aa8S/wHuAekB5QHUAcUBugFjAUkBNQHgAdsB1wwAAbQBwgHsAZsBqgHdAZUBqwHxAYcBpQH/AXgBmgH/
        AWQBiwH/AVIBfAH/AT8BbQH/AS0BYQH/AS4BWgHjAToBWQG7AXUBjAHUbwAB9gHwAewS/wHAAasBnAFj
        AUkBNQHgAdsB1w8AAeYB6gH4AbQBwgHsAZcBpwHdAY0BowHlAXkBlgHyAWABhgH7AVABegH7AUwBcwHu
        AU0BcAHYAVABawHGAX4BlQHcAeYB6gH4bwAB2AHCAbIB9gHwAewB2AHCAbIB9gHwAewB2AHCAbIB9QHv
        AesBzwG5AakB8gHsAekB4AHbAdcYAAHMAdgB/gGdAa0B4AGKAZ4B3AGKAZsB1AGBAZQB0QFwAYkB1QFk
        AXoBugFkAXoBuv8A8AAD9QPeIdUD3gYAA/QD3B7QA9wD9DkAAbcBogGTAWMBSQE1AWMBSQE1AWMBSQE1
        AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1AWMBSQE1BgAD9QPHA4IhbAOC
        A8cD9APEA4gecAOIA8QD9AF1AYQBjwHNAdUB2gFgAXkBhwHIAdAB1AFOAWIBbwHBAcgBywE5AUgBUgG6
        Ab4BwQElAS4BNQG0AbYBuQEUARkBHgKxAbMBDgETARgCsQGzAQ4BEwEYCQABtwGiAZMB9wHlAdwBtwGi
        AZMBtwGiAZMBtwGiAZMBtwGiAZMBtwGiAZMBtwGiAZMBtwGiAZMBtwGiAZMBtwGiAZMBYwFJATUGAAPe
        ARwBggG1ARoBgAGzARcBfQGwARUBewGuARIBeAGrAQ8BdQGoAQwBcgGlAQoBcAGjAQcBbQGgAQUBawGe
        AQMBaQGcAQEBZwGaAQABZgGZA0sDggPcAQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGl
        AQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGlAQwBcgGlA2QDiAPcAdIB1wHbJ/8BtgG4AboJAAG3
        AaIBkwH5AekB4gH4AeYB3QH3AeIB2AH1Ad4B0wH0AdsBzgHzAdcBygHyAdQBxQHxAdABwQHwAc0BvAG3
        AaIBkwFjAUkBNQYAASEBhwG6AWYBzAH/AR8BhQG4AZkC/wFuAdQB/wFuAdQB/wFuAdQB/wFuAdQB/wFu
        AdQB/wFuAdQB/wFuAdQB/wFuAdQB/wE6AaAB0wGZAv8BAAFmAZkDbQEYAZoBxgEbAZwBxwGcAv8BawHX
        Af8BawHXAf8BawHXAf8BawHXAf8BawHXAf8BawHXAf8BawHXAf8BawHXAf8BawHXAf8BKAGZAb8BDAFy
        AaUDcAPQAXoBigGVJ/8BJwEvATkJAAG3AaIBkwH5Ae4B6AH4AeoB4wH4AeYB3gH3AeMB2QH1Ad8B1QH1
        AdsB0AHzAdgBywHyAdUBxgHxAdEBwgG3AaIBkwFjAUkBNQYAASQBigG9AWYBzAH/ASYBjAG/AZkC/wF6
        AeAB/wF6AeAB/wF6AeAB/wF6AeAB/wF6AeAB/wF6AeAB/wF6AeAB/wF6AeAB/wFDAakB3AGZAv8BAQFn
        AZoDbAEYAZoBxgEZAZoBxgF5AeQB8AGcAv8BewHjAf8BewHjAf8BewHjAf8BewHjAf8BewHjAf8BewHj
        Af8BewHjAf8BewHfAf8BQgGyAd4BGQF6AZ0DZAO4AdUB2gHdJ/8BvQHBAcQJAAG3AaIBkwH7AfIB7QHq
        AZoBcQHqAY8BYAHqAYMBTwHnAXgBQAHeAW4BNgHRAWYBLwHBAV0BKgHzAdUBxwG3AaIBkwFjAUkBNQYA
        AScBjQHAAWYBzAH/ASwBkgHFAZkC/wGFAesB/wGFAesB/wGFAesB/wGFAesB/wGFAesB/wGFAesB/wGF
        AesB/wGFAesB/wFNAbMB5gGZAv8BAwFpAZwDbAEYAZoBxgElAaIBzwE/AbgB1wGcAv8BhAHrAf8BhAHr
        Af8BhAHrAf8BhAHrAf8BhAHrAf8BhAHrAf8BhAHrAf8BhAHnAf8BQgG6Ae8BGAGaAcYDZAOIAYABkQGc
        J/8BPAFJAVUJAAG3AaIBkwH8AfYB8wH7AfIB7gH7Ae8B6gH5AesB5gH5AegB4QH3AeUB2wH2AeEB1wH0
        Ad4B0wHzAdoBzQG3AaIBkwFjAUkBNQYAASkBjwHCAWYBzAH/ATIBmAHLAZkC/wGRAfcB/wGRAfcB/wGR
        AfcB/wGRAfcB/wGRAfcB/wGRAfcB/wGRAfcB/wGRAfcB/wFWAbwB7wGZAv8BBQFrAZ4DbAEYAZoBxgFC
        AbMB4gEgAaAByQGlAv8BlAH3Af8BlAH3Af8BlAH3Af8BlAH3Af8BlAH3Af8BlAH3Af8BlAH3Af8BlAH3
        Af8BUgG+AecBWwG8Ac4BDAFyAaUDcAHXAd0B3yf/AcEBxgHLCQABugGlAZYB/QH5AfYB6gGZAXIB6gGP
        AWEB6gGDAU8B5wF4AUAB3gFvATYB0gFmAS8BwQFdASsB9QHfAdMBtwGiAZMBYwFJATUGAAEsAZIBxQFu
        AdQB/wEzAZkBzAGZAv8BmQL/AZkC/wGZAv8BmQL/AZkC/wGZAv8BmQL/AZkC/wFfAcUB+AGZAv8BBwFt
        AaADbQEYAZoBxgFvAdUB/QEYAZoBxgGJAfAB9wGcAv8BnAL/AZwC/wGcAv8BnAL/AZwC/wGcAv8BnAL/
        AVoBxwH/AZYB+QH7ARgBegGbA3ABhgGaAaMn/wFZAWgBdQkAAb4BqQGaAf4B/AH7Af0B+QH4Af0B9wH0
        AfwB9AHwAfsB8QHtAfoB7gHoAfgB6gHkAfcB5wHfAfYB4gHaAbcBogGTAWMBSQE1BgABLgGUAccBegHg
        Af8BLAGSAcUb/wGAAeYE/wEKAXABowOLARgBmgHGAYQB1wH/ARgBmgHGAWsBvwHaBv8B9wH7EP8BhAHn
        BP8BGAF9AaEDiAHYAd8B4Sf/AdkB3QHhCQABwwGuAZ4D/gHqAZoBcQHqAY8BYAHqAYQBTwHmAXgBPwHf
        AW8BNgHSAWYBMAHBAV0BKgH4AegB3wG3AaIBkwFjAUkBNQYAATABlgHJAYUB6wH/AYAB5gH/ASwBkgHF
        ASwBkgHFASwBkgHFASwBkgHFASwBkgHFASwBkgHFAScBjQHAASMBiQG8AR8BhQG4ARsBgQG0ARoBgAGz
        ARoBgAGzA94BGAGaAcYBhAHrAf8BTwHBAeIBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGa
        AcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGJAbEDxAGLAaABqCf/AW4BfwGKCQAByAGy
        AaMH/wH9AfwB/QH7AfkB/QH5AfYB/AH1AfIB+wHyAe4B+wHvAeoB+QHsAeYBtwGiAZMBYwFJATUGAAEy
        AZgBywGRAfcB/wGOAfQB/wGOAfQB/wGOAfQB/wGOAfQB/wGOAfQQ/wEVAXsBrgOLA90DAAEYAZoBxgGc
        AfMB/wGMAfMB/wGMAfMB/wGMAfMB/wGMAfMB/wGMAfMQ/wEYAZoBxgEZAXoBnQPEA/QB2gHhAeQBoQGx
        AbkB2QHfAeIBoQGxAbkB2QHfAeIBiQGeAacB5wHqAe0BiQGeAacB1wHdAeEBggGUAZ8B1QHaAd0BggGU
        AZ8B1QHaAd0BgwGVAaABzAHTAdcJAAHMAbYBpwP/AeoBmgFyAeoBjgFgAeoBgwFPAeYBeAFAAd4BbgE2
        AfwB9gHzAfsB9AHvAbcBogGTAbcBogGTAWQBSgE2BgABMwGZAcwD/wGZAv8BmQL/AZkC/wGZBf8BJAGK
        Ab0BIQGHAboBHgGEAbcBHAGCAbUBGgGAAbMBFwF9AbAD3gP2AwABGAGaAcYD/wGcAv8BnAL/AZwC/wGc
        Bf8BGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYBGAGaAcYD3AP0AwABjwGkAawB6AHsAe4M/wGN
        AaEBqgHVAdwB4B4AAdEBuwGrDf8B/gH9Af4C+wH9AfkB+AG3AaIBkwFkAUoBNgFkAUoBNgFkAUoBNgkA
        ATMBmQHMDP8BKQGPAcIDxwP1GAABIQGiAc4M/wEYAZoBxgPEA/QVAAHVAdsB3wGPAaQBrAHaAeEB5AGP
        AaQBrAHaAeEB5AGPAaQBrAHGAdAB1CEAAdUBvwGvEP8D/gH8AfsBuQGkAZUB1AHFAboBYwFJATUBwQGy
        AacMAAEzAZkBzAEyAZgBywEwAZYByQEuAZQBxwPeA/UeAAEhAaIBzgEhAaIBzgEhAaIBzgEhAaIBzgPc
        A/ROAAHYAcIBshT/Af4BwAGrAZwBYwFJATUBwgGzAaefAAHYAcIBsgHYAcIBsgHYAcIBsgHYAcIBsgHY
        AcIBsgHYAcIBsgHUAb4BrgHPAbkBqQHJAbMBpAHiAdYBzQwAAUIBTQE+BwABPgMAASgDAAFAAwABIAMA
        AQEBAAEBBgABARYAA/8BAAT/BAAB4AEDAfABDwQAAeABAwHAAQMEAAHgAQMBwAEDBAAB4AEDAYABAQQA
        AeABAwGAAQEEAAHgAQMBgAEBBAAB4AEDAYABAQQAAeABAwGAAQEEAAHgAQMBgAEBBAAB4AEDAYABAQQA
        AeABAwGAAQEEAAHgAQMBwAEDBAAB4AEHAcABAwQAAeABDwHwAQ8EAAT/BAAI/wGAAQEBgAEBAv8BwAED
        BQABAQHAAQMFAAEBAcABAwUAAQEBwAEDBQABAQHAAQMFAAEBAcABAwUAAQEBwAEDBQABAQHAAQMFAAEB
        AcABAwUAAQEBwAEDAQABAQMAAQEBwAEDAQABAQEAAQEBAAH/AcABAwGAAX8BgAF/AQEB/wHAAQMBwAH/
        AcAD/wHAAQcG/wHAAQ8L
</value>
  </data>
  <metadata name="CtxMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>194, 17</value>
  </metadata>
  <metadata name="ToolBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>105, 17</value>
  </metadata>
</root>