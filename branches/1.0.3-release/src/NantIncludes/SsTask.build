<?xml version="1.0" encoding="utf-8" ?>

<!-- comment -->

<project xmlns="http://nant.sf.net/release/0.85-rc1/nant.xsd">

  <script language="C#">
    <imports>
      <import name="NAnt.Core.Tasks" />
    </imports>



    <code>

      <![CDATA[

			[TaskName("SsIndex")]

			public class SsIndexTask : ExternalProgramBase

			{

				string arguments;

				FileInfo iniFile;

				DirectoryInfo pdbRoot;

				DirectoryInfo sourceRoot;

				DirectoryInfo ssDir;

				string systemType;

				

				protected override void ExecuteTask()

				{

					DetermineArguments();

					base.ExecuteTask();

				}

				

				public override string ExeName

				{

					get { return @"C:\Program Files\Debugging Tools for Windows\sdk\srcsrv\ssindex.cmd"; }
					set {}
				}
				
				[TaskAttribute("ini")]
				public FileInfo IniFile
				{
				get { return this.iniFile; }
					set { this.iniFile = value;}
				}
				
				[TaskAttribute("pdbDir")]
				public DirectoryInfo PdbRoot
				{
					get { return this.pdbRoot; }
					set { this.pdbRoot = value; }
				}
				
				[TaskAttribute("srcDir", Required=true)]
				public DirectoryInfo SourceRoot
				{
					get { return this.sourceRoot; }
					set { this.sourceRoot = value; }
				}
				
				[TaskAttribute("ssDir")]
				public DirectoryInfo SsDir
				{
					get { return this.ssDir; }
					set { this.ssDir = value; }
				}
				
				[TaskAttribute("type", Required=true)]
				public string SystemType
				{
					get { return this.systemType; }
					set { this.systemType = value; }
				}
				
				public override string ProgramArguments
				{
					get { return this.arguments; }
				}
				
				void DetermineArguments()
				{
					StringBuilder sb = new StringBuilder();
					
					/*sb.Append("-w -x \"");
					
					if(this.SsDir != null)
						sb.Append(this.SsDir);
					else

						sb.Append();*/

						

					if(this.iniFile != null)

						sb.AppendFormat(" /Ini=\"{0}\"", this.SourceRoot.FullName);

					

					DirectoryInfo symbolsRoot = this.PdbRoot;

					if(symbolsRoot == null)

						symbolsRoot = this.SourceRoot;

					

					if(symbolsRoot != null)

						sb.AppendFormat(" /Symbols=\"{0}\"", symbolsRoot.FullName);

					

					if(this.SystemType != null)

						sb.AppendFormat(" /System=\"{0}\"", this.SystemType);

					

					this.arguments = sb.ToString();

				}

			}

      ]]>

    </code>

  </script>

</project>