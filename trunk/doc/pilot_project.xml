<?xml version="1.0" ?> <?xml-stylesheet type="text/xsl"
href="doc.xsl"?> <doc title="Pilot Project Report">

    <p><b>Title:</b> Subversion plugin for Visual Studio .NET</p> <p>
    <b>Employer:</b>  CollabNet - http://www.collab.net</p> 
    <p><b>Supervisor at ColabNet:</b>  Karl Fogel, Software Collaboration Specialist - kfogel@collab.net</p> 
    <p><b>Supervisor at HIO:</b>Eva Hadler Vihovde - EvaHadler.Vihovde@iu.hio.no </p>
    <p><b>Developers:  </b></p> 
    <list> 
        <item>Arild Fines - arild.fines@broadpark.no   </item> 
        <item> Per August Kramer - per@perkramer.com</item> 
        <item>Kristin Borud - s106855@iu.hio.no</item> 
    </list> 
    <p><b>Duration of project:</b>09.01.2003 - 19.06.2003</p>

     <section header="Abstract"> 
        <p>The development of Subversion
        plugin for Visual Studio .NET will be conducted as a
        final project at HIO in cooperation with CollabNet.
        First step is to make a .NET wrapper for the
        Subversion's client API, thereby use this wrapper to
        create a Visual Studio .NET addin for svn. We
        intend to write most of the system in the C#
        programming language.</p> 
     </section>

     <section header="Background"> 
        <p>The background for this specific
        project is that we wanted to do a project in the Microsoft's
        .NET environment. One of the group member had used the revision control system
        Subversion in several projects at school for the last year.
        Subversion is a free open source tool which makes it easier
        for several people to work within the same set of files. The
        files are placed into a central repository. The repository
        is much like an ordinary file server, except that it
        remembers every change ever made to your files. Each
        individual programmer checks out a working copy. During the
        project period these working copies could be updated and
        synchronised with the repository. We decided to do a project
        where both technologies were represented. After having
        defined the project we contacted CollabNet. They agreed to
        be the employer and provide the external supervisor to our
        project.</p> 
    </section>

    <section header="Aim"> 
        <p>The aim of this project is to provid an
        integration for Subversion into the existing
        environment Visual Studio .NET. By making a plugin for
        Visual Studio .NET the revision control system could be
        made available for a huge amount of new programmers. We
        also hope to make the .NET wrapper layer available as a
        standalone component so that it easily could be used in
        other applications.</p> 
   </section>

    <section header="External conditions"> 
        <p>The group will have
        weekly meetings with the HIO/IU supervisor, Eva H.Vihovde
        Fridays at 2am.</p>

        <p>Every Monday from 8:30 am and Fridays from 1:30 am the
        group will work at the dedicated school PC. The group will
        work together until all the group members are familiar with
        the software to be used. At a later stage in the project it
        would be possible to work separately at individual home
        computers as the communication easily could happen via
        instant messaging systems. The purpose with these meetings
        are to assess the quality of the work completed and plan
        the next steps.</p>

        <p>Through the project periode we will continousely give
        information of project news and progress in an online
        diary.</p>

        <p>We have tried to define individual roles for each group
        member based on individual preferences and skills. Arild will
        be the main contact person towards the Employer CollabNet. Per
        August will be the main contact person towards the computer
        department. Kristin will be responsible for a weekly resume to
        the HIO/IU supervisor Eva H. Vihovde in the group meetings
        based on contribution from all the group members. The roles are
        not definite and could be adjusted through the project
        process.</p>

        <p>To enforce an overall consistent look of the code common
        guidelines for source code is composed.</p>

        <p>Subversion will be used for revision control both for
        the source code and documentation. Guidelines will be
        composed for how comments etc. are to be written.</p>

        <p>To verify the sanity of the system at any given moment,
        and to catch regression bugs (things that used to work, but
        breaks due to later changes) we will conduct continuous
        unit tests using the <link
        url="http://nunit.sourceforge.net/">NUnit</link> testing
        framework.</p>

        <p>We hope to make the .NET wrapper layer available as a
        standalone unit for use in other applications. We also hope
        to provide <link url="http://nant.sourceforge.net/">NAnt
        </link> build scripts that will enable it to be built
        without requiring the user to have Visual Studio.NET
        installed. </p>

        <p>Code reviews will be performed. (Guidelines for code
        review to be discussed)</p>

        <p>Guidelines for how the documentation to be written in
        XML will be composed. The intention is to transform these
        XML documents into both HTML and into a format suitable for
        printing(XSL Formatting Objects) using XSL.</p>

        <p>There are some open source code for addins of common
        revision control systems and available code of addins in
        .NET in general which we hope to learn from.</p> 
    </section>

    <section header="Implementation choices"> 
        <p>We primarily intend to
        write most of the system in the C# programming language.
        However, it might be beneficial to consider alternative
        approaches in certain areas of the project. For example, it
        might be a better alternative to write the .NET wrapper layer
        in Managed C++(C++ extensions for the .NET environment) since
        this offers better integration with the C-based API of
        Subversion. Another alternative might be to use a tool called
        <link url="http://www.swig.org">SWIG</link>(Simplified Wrapper
        and Interface Generator) - a tool that generates wrappers for C
        and C++-based APIs automagically. We will have to research
        these alternatives more thoroughly and also seek advice from
        other people with knowledge in the area.</p> 
    </section>

    <section header="Conclusion"> 
        <p> </p> 
    </section> 
    
 </doc>
