<?xml version="1.0" encoding="utf-8" ?> 
<?xml-stylesheet type="text/xsl" href="doc.xsl"?>

<doc title="AnkhSVN FAQ">
    <section header="AnkhSVN Frequently Asked Questions">
        <section header="What versions of VS.NET does Ankh run on?">
            <p>Ankh currently supports both VS.NET 2002 and VS.NET 2003.  It is the same install file (msi)  for both versions. </p>
        </section>
        <section header="What else do I need to have installed to use Ankh?">
            <p>Ankh links into the same libraries that svn.exe does, so if the Subversion repository is already created it is possible to use Ankh
             without ever installing Subversion at all.  However, with Ankh you cannot yet do some things, including but not limited to creating a repository,
              merging, copying or moving. It is highly recommended that Subversion be installed as well at this point.
              You can install Subversion from  <link url="http://subversion.tigris.org">http://subversion.tigris.org</link>.  
                   Other than that all you need is VS.NET. </p>
        </section>
        <section header="I have Ankh installed but the menu entries are disabled or I don't see any at all.">
            <p>It is possible that Ankh was somehow disabled in the VS.NET Add-in Manager.  
            To enable it, in VS.NET go to the Tools menu and select Add-in Manager.   There should be an entry for  the AnkhSVN add-in that you need to check. 
            You should check the Startup box as well so Ankh will load when VS.NET starts, but not the Command Line box.
             After doing so green checks and other icons will become visible in the Solution Explorer form next to the files in your project that are 
             in your Subversion working copy.  </p>
        </section>
        <section header="I uninstalled Ankh, but the menu entries are still there, how can I get rid of them?">
            <p>You can run devenv /setup from the command line which will set VS.NET back to the default state. However 
            if you have any VS.NET customizations you may lose them.  </p>
        </section>
        <section header="Can I use Ankh with CVS?">
            <p>No, Ankh only works with subversion, it will not work with CVS. To use CVS with VS.NET Jalindi Igloo is available at 
                   <link url="http://www.jalindi.com/igloo">http://www.jalindi.com/igloo</link>. </p>
        </section>
        <section header="How can I set up a Subversion server on Windows?">
            <p>Here are instructions for setting up an Apache server on Windows  <link url="http://tortoisesvn.tigris.org/serverinstall.html">http://tortoisesvn.tigris.org/serverinstall.html</link>.  </p>
        </section>
        <section header='I am getting the error "Unable to retrieve folder information from the server with my ASP.NET web project".'>
            <p>This problem is described in detail <link url=
            "http://groups.google.com/groups?hl=en&amp;lr=&amp;ie=UTF-8&amp;oe=UTF-8&amp;threadm=018901c370ad%2467041600%24a301280a%40phx.gbl&amp;rnum=1&amp;prev=/groups%3Fq%3DRefreshing%2Bthe%2Bproject%2Bfailed.%2BUnable%2Bto%2Bretrieve%2Bfolder%2Binformation%2Bfrom%2Bthe%2Bserver.%26hl%3Den%26lr%3D%26ie%3DUTF-8%26oe%3DUTF-8%26selm%3D018901c370ad%252467041600%2524a301280a%2540phx.gbl%26rnum%3D1">
            here</link>. Mark Griffiths came up with a 
             workaround: create two .cmd files in each web project:</p>    
            <code>
hide-svn.cmd:
@ECHO OFF
FOR /R %%f IN (.svn) DO IF EXIST "%%f" (
   ATTRIB -h "%%f"
   RENAME "%%f" _svn
)

restore-svn.cmd:
@ECHO OFF
FOR /R %%f IN (_svn) DO IF EXIST "%%f" (
   RENAME "%%f" .svn
   ATTRIB +h "%%~pf\.svn"
    )      </code>
            <p>Before opening the web project, run hide-svn.  After the project is loaded (and refreshed it's vswebcache),  run restore-svn.  
                  It is only during initial loading and when using the refresh button in solution explorer that the .svn directories get in the way.</p>
            <p>An alternative workaround suggested by Matthew Mastracci is to convert your "Web" projects to "Local" projects.  Change the "Web" string to "Local" 
                  within your web .csproj, then you can reference it as a normal project, without worrying about any of the web mapping items. Debugging works as 
                  expected, with the manual step of changing the debug application to "URL" and pointing it at your local share.  Note that these debug settings are stored 
                  locally in the .suo file.</p>
        </section>
        <section header="I installed Ankh, Ankh menu entries are there but right clicking on a versioned file gives me a null pointer exception.">
            <p>Make sure the .sln file is under version control. See the readme file for more information.
            </p>
        </section>
        <section header="Why do I have to use Ankh rename and not the VS.NET rename to rename a versioned file?">
            <p>We were unable to get the VS.NET rename to work with Ankh for various reasons. Unfortunately, 
                the ItemRenamed event only occurs (as indicated by the name) AFTER the IDE has renamed the file.
                It was attempted to work around that by first renaming the file in question back to it's original 
                name and then invoking Subversion's rename functionality on it. Kludgy, but it works. However, 
                Subversion doesn't permit you to rename an item more than once, nor does it allow you to rename 
                items that have local modifications. Attempting to do so will cause an exception to be thrown. 
                It was attempted to work around that by catching that exception, and renaming the project 
                item back to the original name by calling SaveAs on the ProjectItem object. But this DOES NOT WORK for 
                folders - you cannot call SaveAs on a ProjectItem if it represents a folder.
                In light of this, we found that the current approach was a better idea
            </p>
        </section>
        <section header="I am getting an svn client error exception for svn_io_file_open: can't open (then a path to a file with a .projdata extension) ">
            <p>You cannot put the .projdata file under Subversion version control. VS.NET puts a pretty tight lock on that 
            whenever a solution is loaded - other applications cannot even read from it. I think we even used this exact 
            scenario for an Ankh presentation to demonstrate how the error reporting worked.
            </p>
        </section>
        <section header="There is nothing about my problem here!">
            <p>Don't despair. Either send a mail to our developers mailing list(dev AT ankhsvn.tigris.org) describing the 
            problem (in as much detail as possible) or visit us in our IRC channel #ankhsvn on the irc.freenode.net server.</p>
        </section>
    </section>
</doc>
