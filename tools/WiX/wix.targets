<Project InitialTargets="CheckRequiredProperties" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Some properties must be set in the main project file, before using this .TARGETS file -->
    <Target 
        Name="CheckRequiredProperties">

        <Error  Condition="'$(OutputName)'==''"
                Text="The &quot;OutputName&quot; property is not set in project &quot;$(MSBuildProjectFile)&quot;.  The OutputName defines the name of the output without a file extension. Please set this in the project file before the &lt;Import&gt; of the .Targets file."/>
        <Error  Condition="'$(OutputType)'==''"
                Text="The &quot;OutputType&quot; property is not set in project &quot;$(MSBuildProjectFile)&quot;.  The OutputType defines whether an msi, merge module, or wix library is being built. Please set this in the project file before the &lt;Import&gt; of the .Targets file. Possible values are 'package', 'module', 'library', and 'object'."/>
    </Target>

            
    <UsingTask TaskName="Candle" AssemblyFile="wixtasks.dll" />
    <UsingTask TaskName="Lit" AssemblyFile="wixtasks.dll" />
    <UsingTask TaskName="Light" AssemblyFile="wixtasks.dll" />

    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildBinPath)\Wix.targets</MSBuildAllProjects>
    </PropertyGroup>

    <!-- Define the default file extensions -->
    <PropertyGroup>
        <TargetExt Condition="'$(OutputType)'=='package'">.msi</TargetExt>
        <TargetExt Condition="'$(OutputType)'=='module'">.msm</TargetExt>
        <TargetExt Condition="'$(OutputType)'=='library'">.wixlib</TargetExt>
        <IntermediateExt Condition="'$(IntermediateExt)'==''">.wixobj</IntermediateExt>
    </PropertyGroup>

    <!-- Default output type and path properties -->
    <PropertyGroup>
        <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
        <OutputPath Condition=" '$(OutputPath)' == '' ">bin\$(Configuration)\</OutputPath>
        <OutDir>$(OutputPath)</OutDir>                                                                    <!-- Example, bin\Debug\ -->
        <TargetName Condition=" '$(TargetName)' == '' ">$(OutputName)</TargetName>                        <!-- Example, MySetup -->
        <TargetFileName Condition=" '$(TargetFileName)' == '' ">$(TargetName)$(TargetExt)</TargetFileName><!-- Example, MySetup.msi -->
        <TargetPath Condition=" '$(TargetPath)' == '' ">$(OutDir)$(TargetFileName)</TargetPath>           <!-- Example, bin\Debug\MySetup.msi -->

        <!-- Properties for the intermediate object output -->
        <BaseOutputPath Condition=" '$(BaseOutputPath)' == '' ">obj\</BaseOutputPath>                                                      <!-- Example, obj\ -->
        <IntermediateOutputPath Condition=" '$(IntermediateOutputPath)' == '' ">$(BaseOutputPath)$(Configuration)\</IntermediateOutputPath><!-- Example, obj\Debug\ -->
        
        <!-- Specify the Candle .wixobj if it isn't defined. If there is not supposed to be object output (ie. Only linking), don't set the object output. -->
        <CompileObjOutput Condition=" '$(CompileObjOutput)' == '' And '$(NoObjOutputDefault)' != 'true' ">$(IntermediateOutputPath)$(OutputName)$(IntermediateExt)</CompileObjOutput><!-- Example, obj\Debug\MySetup.wixobj -->
    </PropertyGroup>

    <!-- Default Lib properties copied from the Compile properties. -->
    <PropertyGroup>
        <LibNoLogo Condition="'$(LibNoLogo)'==''">$(NoLogo)</LibNoLogo>
        <LibExtension Condition="'$(LibExtension)'==''">@(Extension)</LibExtension>
        <LibSuppressSchemaValidation Condition="'$(LibSuppressSchemaValidation)'==''">$(SuppressSchemaValidation)</LibSuppressSchemaValidation>
        <LibSuppressIntermediateFileVersionMatching Condition="'$(LibSuppressIntermediateFileVersionMatching)'==''">$(SuppressIntermediateFileVersionMatching)</LibSuppressIntermediateFileVersionMatching>
        <LibSuppressAllWarnings Condition="'$(LibSuppressAllWarnings)'==''">$(SuppressAllWarnings)</LibSuppressAllWarnings>
        <LibUseSmallTableDefinitions Condition="'$(LibUseSmallTableDefinitions)'==''">$(UseSmallTableDefinitions)</LibUseSmallTableDefinitions>
        <LibTreatWarningsAsErrors Condition="'$(LibTreatWarningsAsErrors)'==''">$(TreatWarningsAsErrors)</LibTreatWarningsAsErrors>
        <LibWarningLevel Condition="'$(LibWarningLevel)'==''">$(WarningLevel)</LibWarningLevel>
        <LibVerboseOutput Condition="'$(LibVerboseOutput)'==''">$(VerboseOutput)</LibVerboseOutput>
        <LibVerboseOutputLevel Condition="'$(LibVerboseOutputLevel)'==''">$(VerboseOutputLevel)</LibVerboseOutputLevel>
    </PropertyGroup>
    
    <!-- Default Linker properties copied from the Compile properties. -->
    <PropertyGroup>
        <LinkerNoLogo Condition="'$(LinkerNoLogo)'==''">$(NoLogo)</LinkerNoLogo>
        <LinkerExtension Condition="'$(LinkerExtension)'==''">@(Extension)</LinkerExtension>
        <LinkerSuppressSchemaValidation Condition="'$(LinkerSuppressSchemaValidation)'==''">$(SuppressSchemaValidation)</LinkerSuppressSchemaValidation>
        <LinkerSuppressIntermediateFileVersionMatching Condition="'$(LinkerSuppressIntermediateFileVersionMatching)'==''">$(SuppressIntermediateFileVersionMatching)</LinkerSuppressIntermediateFileVersionMatching>
        <LinkerSuppressAllWarnings Condition="'$(LinkerSuppressAllWarnings)'==''">$(SuppressAllWarnings)</LinkerSuppressAllWarnings>
        <LinkerUseSmallTableDefinitions Condition="'$(LinkerUseSmallTableDefinitions)'==''">$(UseSmallTableDefinitions)</LinkerUseSmallTableDefinitions>
        <LinkerTreatWarningsAsErrors Condition="'$(LinkerTreatWarningsAsErrors)'==''">$(TreatWarningsAsErrors)</LinkerTreatWarningsAsErrors>
        <LinkerWarningLevel Condition="'$(LinkerWarningLevel)'==''">$(WarningLevel)</LinkerWarningLevel>
        <LinkerVerboseOutput Condition="'$(LinkerVerboseOutput)'==''">$(VerboseOutput)</LinkerVerboseOutput>
        <LinkerVerboseOutputLevel Condition="'$(LinkerVerboseOutputLevel)'==''">$(VerboseOutputLevel)</LinkerVerboseOutputLevel>
    </PropertyGroup>

    <!-- Compile the wxs source. -->
    <PropertyGroup>
        <CompileDependsOn>PrepareForBuild</CompileDependsOn>
    </PropertyGroup>
    <Target
        Name="Compile"
        Inputs="@(Compile);$(MSBuildAllProjects)"
        Outputs="$(CompileObjOutput)"
        DependsOnTargets="$(CompileDependsOn)">

        <Candle
            SourceFiles="@(Compile)"
            DefineConstants="$(DefineConstants)"
            PreprocessToStdOut="$(PreprocessToStdOut)" 
            PreprocessToFile="$(PreprocessToFile)" 
            IncludeSearchPaths="@(IncludeSearchPath)"    
            NoLogo="$(NoLogo)"
            OutputFile="$(CompileObjOutput)"
            SuppressSchemaValidation="$(SuppressSchemaValidation)"
            UseSmallTableDefinitions="$(UseSmallTableDefinitions)" 
            ShowSourceTrace="$(ShowSourceTrace)" 
            Extensions="@(CompileExtension)" 
            SuppressAllWarnings="$(SuppressAllWarnings)" 
            TreatWarningsAsErrors="$(TreatWarningsAsErrors)" 
            WarningLevel="$(WarningLevel)" 
            VerboseOutput="$(VerboseOutput)" 
            VerboseOutputLevel="$(VerboseOutputLevel)" 
            ToolPath="$(ToolPath)"
        />
    </Target>

    <PropertyGroup>
        <!-- Don't depend on the Compile task because Lib can be run from a different project than the compile. -->
        <LibDependsOn>PrepareForBuild</LibDependsOn>
    </PropertyGroup>
    <Target
        Name="Lib"
        Inputs="$(CompileObjOutput);
                @(WixObject);
                $(MSBuildAllProjects)"
        Outputs="$(OutDir)$(TargetFileName)"
        DependsOnTargets="$(LibDependsOn)"
        Condition=" '$(OutputType)' == 'library' ">

        <Lit
            ObjectFiles="@(WixObject);@(WixLibrary);$(CompileObjOutput)"
            NoLogo="$(LibNoLogo)"
            OutputFile="$(OutDir)$(TargetFileName)"
            Extensions="@(LibExtension)" 
            SuppressSchemaValidation="$(LibSuppressSchemaValidation)"
            SuppressIntermediateFileVersionMatching="$(LibSuppressIntermediateFileVersionMatching)" 
            SuppressAllWarnings="$(LibSuppressAllWarnings)" 
            UseSmallTableDefinitions="$(LibUseSmallTableDefinitions)" 
            TreatWarningsAsErrors="$(LibTreatWarningsAsErrors)" 
            WarningLevel="$(LibWarningLevel)" 
            VerboseOutput="$(LibVerboseOutput)" 
            VerboseOutputLevel="$(LibVerboseOutputLevel)" 
            ToolPath="$(ToolPath)"
        />
    </Target>

    <PropertyGroup>
        <!-- Don't depend on the Compile task because Link can be run from a different project than the compile. -->
        <LinkDependsOn>PrepareForBuild</LinkDependsOn>
    </PropertyGroup>
    <Target
        Name="Link"
        Inputs="$(CompileObjOutput);
                @(WixObject);
                @(WixLibrary);
                $(MSBuildAllProjects)"
        Outputs="$(OutDir)$(TargetFileName)"
        DependsOnTargets="$(LinkDependsOn)"
        Condition=" '$(OutputType)'=='package' Or '$(OutputType)'=='module' ">

        <Light
            ObjectFiles="$(CompileObjOutput);@(WixObject);@(WixLibrary)"
            BaseInputPath="$(BaseInputPath)"
            CabinetCache="$(CabinetCache)"
            Extensions="@(LinkExtension)" 
            BaseUncompressedImagesOutputPath="$(BaseUncompressedImagesOutputPath)"
            LocalizedStringFile="$(LocalizedStringFile)" 
            NoLogo="$(LinkerNoLogo)"
            LeaveTemporaryFiles="$(LeaveTemporaryFiles)" 
            ReuseCabinetCache="$(ReuseCabinetCache)" 
            OutputFile="$(OutDir)$(TargetFileName)"
            OutputAsXml="$(OutputAsXml)" 
            SuppressDefaultAdminSequenceActions="$(SuppressDefaultAdminSequenceActions)"
            SuppressDefaultAdvSequenceActions="$(SuppressDefaultAdvSequenceActions)"
            SuppressAssemblies="$(SuppressAssemblies)"
            SuppressFiles="$(SuppressFiles)"
            SuppressLayout="$(SuppressLayout)"
            SuppressSchemaValidation="$(LinkerSuppressSchemaValidation)"
            SuppressDefaultUISequenceActions="$(SuppressDefaultUISequenceActions)"
            SuppressIntermediateFileVersionMatching="$(LinkerSuppressIntermediateFileVersionMatching)" 
            SuppressAllWarnings="$(LinkerSuppressAllWarnings)" 
            UseSmallTableDefinitions="$(LinkerUseSmallTableDefinitions)" 
            TreatWarningsAsErrors="$(LinkerTreatWarningsAsErrors)" 
            WarningLevel="$(LinkerWarningLevel)" 
            VerboseOutput="$(LinkerVerboseOutput)" 
            VerboseOutputLevel="$(LinkerVerboseOutputLevel)" 
            ToolPath="$(ToolPath)"
        />

    </Target>

    <!-- Make the build directories. -->
    <Target
        Name="PrepareForBuild">

        <MakeDir Directories="$(IntermediateOutputPath);$(OutDir)"/>
    </Target>

    <PropertyGroup>
        <BuildDependsOn>PrepareForBuild;Compile;Link</BuildDependsOn>
    </PropertyGroup>
    <Target
        Name="Build"
        DependsOnTargets="$(BuildDependsOn)">
    </Target>

    <PropertyGroup>
        <RebuildDependsOn>Clean;Build</RebuildDependsOn>
    </PropertyGroup>
    <Target 
        Name="Rebuild"
        DependsOnTargets="$(RebuildDependsOn)">
    </Target>

    <!-- Clean task -->
    <PropertyGroup>
        <CleanDependsOn></CleanDependsOn>
    </PropertyGroup>
    <Target
        Name="Clean"
        DependsOnTargets="$(CleanDependsOn)">

        <Delete Files=
            "$(OutDir)$(TargetFileName);
             $(CompileObjOutput)"/>
        </Target>
</Project>
